<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="pictureBox1.InitialImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>